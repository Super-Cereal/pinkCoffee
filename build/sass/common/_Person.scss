.Person {
  &-AvatarWrapper {
    display: block;
  }
  &-Avatar {
    width: 100%;
    border-radius: 50%;
    filter: grayscale(1);
  }
  &-Name {
    text-overflow: ellipsis;
    overflow: hidden;
  }
  &-Value {
    margin-top: 4px;
  }
  &_ordinary {
    display: flex;
    flex-direction: column;
    align-items: center;
    @include media(width, (75px, 104px, 130px, 160px, 230px));
    @include media(min-height, (105px, 142px, 190px, 230px, 335px));
    margin: 0 auto;
    box-sizing: border-box;
    @include media(padding-top, (14px, 20px, 28px, 28px, 45px));
    @include media(border-radius, (6px, 6px, 8px, 8px, 12px));
    &_hoverOn {
      &:hover {
        background: radial-gradient(
          85.62% 148.33% at 49.85% 100%,
          rgba(68, 58, 42, 0.7864) 0%,
          rgba(0, 0, 0, 0.8) 100%
        );
        box-shadow: inset -1px 1px 1px rgba(255, 255, 255, 0.2),
          inset 2px 2px 16px rgba(255, 255, 255, 0.1);
      }
      &.Person_ordinary_selected {
        background: radial-gradient(91.67% 122.17% at 69.17% -11.17%, #ffa300 0%, #2d1c00 100%);
        box-shadow: inset -1px 1px 1px rgba(255, 255, 255, 0.4),
          inset 0px 6px 15px rgba(255, 162, 0, 0.4);
      }
    }
    .Person {
      &-AvatarWrapper {
        position: relative;
        @include media(width, (53px, 64px, 85px, 115px, 150px));
        &::before {
          display: block;
          content: attr(data-emoji);
          position: absolute;
          top: 10px;
          left: 50%;
          transform: translate(-50%, -100%);
          @include media(font-size, (22px, 30px, 38px, 45px, 60px));
          line-height: 32px;
          z-index: 5;
        }
      }
      &-Name {
        @include media(max-width, (71px, 100px, 126px, 150px, 236px));
        text-align: center;
        margin-top: 2px;
      }
    }
  }
  &_horizontal {
    display: grid;
    @include media(
      grid-template-columns,
      (40px 120px, 40px 166px, 70px 250px, 80px 350px, 100px 470px)
    );
    @include media(grid-template-rows, (40px, 40px, 70px, 80px, 100px));
    @include media(column-gap, (14px, 14px, 18px, 20px));
    .Person {
      &-Info {
        display: flex;
        flex-direction: column;
        padding-top: 1px;
      }
    }
  }
}

@media (orientation: portrait) {
  .Person {
    &_ordinary {
      @include mediaPortrait(width, (80px, 104px, 104px, 160px));
      @include mediaPortrait(min-height, (110px, 142px, 142px, 210px));
      @include mediaPortrait(padding-top, (14px, 20px, 20px, 25px));
      .Person {
        &-AvatarWrapper {
          @include mediaPortrait(width, (53px, 64px, 64px, 100px));
          &::before {
            @include mediaPortrait(font-size, (22px, 30px, 30px, 40px));
          }
        }
        &-Name {
          @include mediaPortrait(max-width, (70px, 100px, 116px, 146px));
        }
      }
    }
    &_horizontal {
      @include mediaPortrait(grid-template-columns, (40px 1fr, 40px 1fr, 50px 1fr, 75px 1fr));
      @include mediaPortrait(grid-template-rows, (40px, 40px, 50px, 75px));
    }
  }
}
.theme_light {
  .Person {
    &-Avatar {
      filter: none;
    }
    &_ordinary_hoverOn {
      &:hover {
        background: linear-gradient(
          180deg,
          rgba(244, 244, 244, 0.9) 0.82%,
          #e9e9e9 100%,
          rgba(234, 234, 234, 0) 100%
        );
        box-shadow: inset -1px 1px 1px rgba(255, 255, 255, 0.5),
          inset 0px 0px 20px rgba(207, 207, 207, 0.5);
      }
      &.Person_ordinary_selected {
        background: linear-gradient(180deg, #fff2d1 0.82%, #ffd66c 100%);
        box-shadow: inset -1px 1px 1px rgba(255, 255, 255, 0.5),
          inset 0px 0px 20px rgba(255, 176, 57, 0.8);
      }
    }
  }
}
